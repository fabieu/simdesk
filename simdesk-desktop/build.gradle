plugins {
    id 'java'
    id "org.openjfx.javafxplugin" version "0.1.0"
    id "io.spring.dependency-management" version "1.1.7"
    id "org.springframework.boot" version "3.5.5"
}

group = 'de.sustineo.simdesk'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

javafx {
    version = '21'
    modules = [ 'javafx.controls' ]
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation "org.springframework.boot:spring-boot-starter-json"
    implementation "org.springframework.boot:spring-boot-starter-websocket"

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
}

compileJava {
    options.deprecation = true
}

tasks.register('jpackageBuild', Exec) {
    group = 'build'
    description = 'Package the application as a native image using jpackage'

    dependsOn bootJar

    def appName = project.name
    def inputDir = layout.buildDirectory.dir("libs").get().asFile
    def outputDir = layout.buildDirectory.dir("jpackage").get().asFile
    def mainJar = bootJar.archiveFileName.get()

    doFirst {
        delete outputDir
        mkdir outputDir
    }

    commandLine 'jpackage',
            '--type', 'app-image',
            '--input', inputDir,
            '--dest', outputDir,
            '--name', appName,
            '--main-jar', mainJar
}